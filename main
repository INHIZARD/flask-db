from flask import Flask, redirect, render_template
from data import db_session
from data.users import User
from data.jobs import Jobs
import datetime

app = Flask(__name__)
app.config['SECRET_KEY'] = 'yandexlyceum_secret_key'


def main():
    db_session.global_init("db/blogs.db")
    user = User()
    user.surname = "Scott"
    user.name = 'Ridley'
    user.age = 21
    user.position = 'captain'
    user.speciality = 'research engineer'
    user.address = 'module_1'
    user.email = 'scott_chief@mars.org'

    user1 = User()
    user1.surname = "John"
    user1.name = 'Cina'
    user1.age = 33
    user1.position = 'the best'
    user1.speciality = 'restler'
    user1.address = 'box'
    user1.email = 'joooooooohnciiiiinaaaa@mars.org'

    user2 = User()
    user2.surname = "Jeff"
    user2.name = 'Caplan'
    user2.age = 35
    user2.position = 'director'
    user2.speciality = 'designer'
    user2.address = 'overwatch'
    user2.email = 'jeff_the_best@mars.org'

    user3 = User()
    user3.surname = "SCP"
    user3.name = '049'
    user3.age = 100
    user3.position = 'scp foundation'
    user3.speciality = 'doctor'
    user3.address = 'jail'
    user3.email = 'alive@mars.org'

    jobs = Jobs()
    jobs.team_leader = 1
    jobs.job = 'deployment of residential modules 1 and 2'
    jobs.work_size = 15
    jobs.collaborators = '2, 3'
    jobs.start_date = datetime.datetime.now()
    jobs.is_finished = False

    jobs1 = Jobs()
    jobs1.team_leader = 2
    jobs1.job = 'deployment of residential modules 3 and 4'
    jobs1.work_size = 15
    jobs1.collaborators = '2'
    jobs1.start_date = datetime.datetime.now()
    jobs1.is_finished = False

    jobs2 = Jobs()
    jobs2.team_leader = 3
    jobs2.job = 'support'
    jobs2.work_size = 5
    jobs2.collaborators = '2'
    jobs2.start_date = datetime.datetime.now()
    jobs2.is_finished = True

    jobs3 = Jobs()
    jobs3.team_leader = 4
    jobs3.job = 'support'
    jobs3.work_size = 10
    jobs3.collaborators = '3'
    jobs3.start_date = datetime.datetime.now()
    jobs3.is_finished = False

    db_sess = db_session.create_session()
    db_sess.add(user)
    db_sess.add(user1)
    db_sess.add(user2)
    db_sess.add(user3)
    db_sess.add(jobs)
    db_sess.add(jobs1)
    db_sess.add(jobs2)
    db_sess.add(jobs3)
    db_sess.commit()
    app.run()


@app.route('/')
def journal():
    db_session.global_init('db/blogs.db')
    db_sess = db_session.create_session()
    return render_template('works.html', db_sess=db_sess.query(User).all())


if __name__ == '__main__':
    main()
